// Mocks generated by Mockito 5.4.2 from annotations
// in task_login/test/task_login_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:task_login/contract/login_contract.dart' as _i3;
import 'package:tasks_core/base_provider.dart' as _i4;
import 'package:tasks_firebase/auth/firebase_auth.dart' as _i5;
import 'package:tasks_firebase/firebase_vo/firebase_auth_vo.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseAuthVO_0 extends _i1.SmartFake
    implements _i2.FirebaseAuthVO {
  _FakeFirebaseAuthVO_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginPresenter].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginPresenter extends _i1.Mock implements _i3.LoginPresenter {
  @override
  void navigateToCreateAccountPage(dynamic context) => super.noSuchMethod(
        Invocation.method(
          #navigateToCreateAccountPage,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void closeApp(dynamic context) => super.noSuchMethod(
        Invocation.method(
          #closeApp,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void navigateToLoginSignInPage(dynamic context) => super.noSuchMethod(
        Invocation.method(
          #navigateToLoginSignInPage,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void showMessageFeedBack(
    dynamic context,
    String? message,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showMessageFeedBack,
          [
            context,
            message,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerAccount(
    String? email,
    String? password,
    bool? rememberEmail,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAccount,
          [
            email,
            password,
            rememberEmail,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setProvider(_i4.BaseProvider? baseProvider) => super.noSuchMethod(
        Invocation.method(
          #setProvider,
          [baseProvider],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LoginView].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginView extends _i1.Mock implements _i3.LoginView {
  @override
  void closeApp() => super.noSuchMethod(
        Invocation.method(
          #closeApp,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clearInputs() => super.noSuchMethod(
        Invocation.method(
          #clearInputs,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic showError(String? message) => super.noSuchMethod(
        Invocation.method(
          #showError,
          [message],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic showMessage(String? message) => super.noSuchMethod(
        Invocation.method(
          #showMessage,
          [message],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic showOrHideLoading(bool? flag) => super.noSuchMethod(
        Invocation.method(
          #showOrHideLoading,
          [flag],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FirebaseTaskAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseTaskAuth extends _i1.Mock implements _i5.FirebaseTaskAuth {
  @override
  _i6.Future<_i2.FirebaseAuthVO> authenticateWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticateWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<_i2.FirebaseAuthVO>.value(_FakeFirebaseAuthVO_0(
          this,
          Invocation.method(
            #authenticateWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.FirebaseAuthVO>.value(_FakeFirebaseAuthVO_0(
          this,
          Invocation.method(
            #authenticateWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.FirebaseAuthVO>);
  @override
  _i6.Future<_i2.FirebaseAuthVO> createUserWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<_i2.FirebaseAuthVO>.value(_FakeFirebaseAuthVO_0(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.FirebaseAuthVO>.value(_FakeFirebaseAuthVO_0(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i2.FirebaseAuthVO>);
  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
